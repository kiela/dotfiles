#!/usr/bin/env sh

V=${V:-false}

__debug()
{
  if $V; then
    echo "DEBUG: $1"
  fi
}

__execute()
{
  __debug "$1"
  eval "$1"
}

__install()
{
  dir=$(basename "$(pwd)")
  args="$@"

  __execute "helm dependency build"
  __execute "helm install $dir . --namespace $dir --create-namespace $args"
}

__upgrade()
{
  dir=$(basename "$(pwd)")
  args="$@"

  __execute "helm dependency update"
  __execute "helm upgrade $dir . --namespace $dir --create-namespace $args"
}

__uninstall()
{
  local _chart_name=$(basename "$(pwd)")
  local _delete_namespace=false
  local _resource_count

  __execute "helm delete $_chart_name"

  while true; do
    echo "Removing chart $_chart_name objects"
    _resource_count=$(kubectl get all -n "$_chart_name" --ignore-not-found | wc -l)
    
    if [[ $_resource_count -gt 0 ]]; then
      sleep 5
      echo "Still removing chart $_chart_name objects..."
    else
      while true; do
        read -p "Namespace '$_chart_name' has no resources. Do you want to delete it? (y/n) " _yn

        case $_yn in
          [Yy]* ) _delete_namespace=true; break;; # brak from the second loop
          [Nn]* ) break;; # break from the second loop
          * ) echo "Please answer yes (Y/y) or no (N/n).";;
        esac
      done

      if [[ "$_delete_namespace" == true ]]; then
        __execute "kubectl delete namespace $_chart_name"
      else
        echo "Deletion cancelled. Namespace '$_chart_name' is not deleted."
      fi

      break # break from the first loop
    fi
  done
}

__template_render()
{
  output_dir=$1
  args=${@:2}

  __execute "rm -rf Chart.lock charts $output_dir"
  __execute "helm repo update"
  __execute "helm template \
        --debug \
        --dependency-update \
        --output-dir $output_dir \
        -f values.yaml $args ."
}

__help()
{
  echo "$0 install|upgrade|uninstall|render|help <args>"
}

option=$1
shift

case $option in
  i|install)
    __install $@
    ;;
  up|upgrade)
    __upgrade $@
    ;;
  un|uninstall)
    __uninstall
    ;;
  r|render)
    __template_render $@
    ;;
  *)
    __help
    ;;
esac
